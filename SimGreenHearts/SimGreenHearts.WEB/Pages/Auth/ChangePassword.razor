@page "/changePassword"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject ToastService toastService

<div class="card mb-5" data-wow-delay="0.1s">
    <EditForm Model="changePasswordDTO" OnValidSubmit="ChangePasswordAsync">
        <DataAnnotationsValidator />
        <div class="card-body align-content-center">
            <div class="col-12 mb-3">
                <div class="form-floating">
                    <InputText type="password" class="form-control" @bind-Value="@changePasswordDTO.CurrentPassword" placeholder="Your CurrentPassword" />
                    <label>Contraseña actual</label>
                    <ValidationMessage For="@(() => changePasswordDTO.CurrentPassword)" />
                </div>
            </div>

            <div class="col-12 mb-3">
                <div class="form-floating">
                    <InputText type="password" class="form-control" @bind-Value="@changePasswordDTO.NewPassword" placeholder="Your NewPassword" />
                    <label>Nueva contraseña</label>
                    <ValidationMessage For="@(() => changePasswordDTO.NewPassword)" />
                </div>
            </div>
            <div class="col-12 mb-3">
                <div class="form-floating">
                    <InputText type="password" class="form-control" @bind-Value="@changePasswordDTO.Confirm" placeholder="Your Confirm" />
                    <label>Confirmar nueva contraseña</label>
                    <ValidationMessage For="@(() => changePasswordDTO.Confirm)" />
                </div>
            </div>
            <div class="col-12">
                <button class="btn btn-primary py-3 px-4" type="submit">Guardar</button>
            </div>
        </div>
    </EditForm>
</div>


@code {


    [CascadingParameter]
    public MainLayout? Layout { get; set; }

    protected override void OnInitialized()
    {
        Layout!.Title = "Cambiar contraseña";
        Layout!.Breadcrumbs = new List<string>() { "Inicio", "Páginas", "Perfil", "Cambiar contraseña" };
    }

    private ChangePasswordDTO changePasswordDTO = new();

    private async Task ChangePasswordAsync()
    {
        var responseHttp = await repository.PostAsync("/gateway/accounts/changePassword", changePasswordDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            toastService.Notify(new(ToastType.Danger, message!));
            return;
        }

        toastService.Notify(new(ToastType.Success, "Contraseña cambiada con éxito."));
        navigationManager.NavigateTo("/profile");
    }

}
