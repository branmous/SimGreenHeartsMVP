@page "/login"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject ToastService toastService

<div class="card mb-5" data-wow-delay="0.1s">
    <p class="fs-5 fw-bold text-primary text-center">Login</p>
    <EditForm Model="authDTO" OnValidSubmit="LoginAsync">
        <DataAnnotationsValidator />
        <div class="card-body align-content-center">
            <div class="col-12 mb-3">
                <div class="form-floating">
                    <InputText class="form-control" @bind-Value="@authDTO.Email" placeholder="Your Email" />
                    <label>Correo eletrónico</label>
                    <ValidationMessage For="@(() => authDTO.Email)" />
                </div>
            </div>

            <div class="col-12 mb-3">
                <div class="form-floating">
                    <InputText class="form-control" type="password" @bind-Value="@authDTO.Password" placeholder="Your Password" />
                    <label>Contraseña</label>
                    <ValidationMessage For="@(() => authDTO.Password)" />
                </div>
            </div>
            <div class="col-12">
                <button class="btn btn-primary py-3 px-4" type="submit">Ingresar</button>
            </div>
        </div>
    </EditForm>
</div>

@code {

    private AuthDTO authDTO = new();

    [CascadingParameter]
    public MainLayout? Layout { get; set; }

    protected override void OnInitialized()
    {
        Layout!.Title = "Login";
    }

    private async Task LoginAsync()
    {
        var responseHttp = await repository.PostAsync<AuthDTO, TokenDTO>("/gateway/accounts/Login", authDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            toastService.Notify(new(ToastType.Danger, message!));
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        toastService.Notify(new(ToastType.Success, "Bienvenido!!!"));
        navigationManager.NavigateTo("/");

    }


}
